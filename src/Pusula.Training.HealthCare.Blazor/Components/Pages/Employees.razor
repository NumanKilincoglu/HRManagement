@page "/employees"

@attribute [Authorize(HealthCarePermissions.Employees.Default)]

@using Pusula.Training.HealthCare.Employees
@inherits HealthCareComponentBase
@inject IEmployeesAppService EmployeesAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Employees"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Form id="EmployeeSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="EmployeeSearchForm" Clicked="GetEmployeesAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
        
        <Row Class="mt-3 mb-3"> 
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Name"]</FieldLabel>
                        <TextEdit Text="@Filter.FirstName" TextChanged="@OnNameChangedAsync" />                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>

@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        
        @if (SelectedEmployees.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllEmployeesSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedEmployees.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedEmployees.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }
                    
                <div>
                    @if ((SelectedEmployees.Count == PageSize || SelectedEmployees.Count == EmployeeList.Count) && TotalCount > SelectedEmployees.Count)
                    {
                        if (!AllEmployeesSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }
                    
                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedEmployeesAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>
            
            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="EmployeeDto"
                  Data="EmployeeList"
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedEmployees"
                  RowSelectable="@((args) => CanDeleteEmployee)"
                  SelectedRowsChanged="SelectedEmployeeRowsChanged"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeleteEmployee && EmployeeList.Any())
                {
                    <DataGridMultiSelectColumn TItem="EmployeeDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="EmployeeDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="EmployeeDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="EmployeeDto"
                                          Visible="@CanEditEmployee"
                                          Clicked="async () => await OpenEditEmployeeModalAsync(context)"
                                          Text="@L["Edit"]">
                            </EntityAction>
                            
                            <EntityAction TItem="EmployeeDto"
                                          Visible="@CanEditEmployee"
                                          Clicked="() => NavigateToEmployeeLeaves(context.Id)"
                                          Text="@L["ShowUserLeaves"]">
                            </EntityAction>
                            
                            <EntityAction TItem="EmployeeDto"
                                          Visible="@CanDeleteEmployee"
                                          Clicked="() => DeleteEmployeeAsync(context)"
                                          ConfirmationMessage="@(() => L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]">
                            </EntityAction>

                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
                <DataGridColumn TItem="EmployeeDto"
                                Field="FirstName"
                                Caption="@L["Name"]">
                </DataGridColumn>
                <DataGridColumn TItem="EmployeeDto"
                                Field="LastName"
                                Caption="@L["LastName"]">
                </DataGridColumn>

                <DataGridColumn TItem="EmployeeDto"
                                Field="BirthDate"
                                Caption="@L["BirthDate"]">
                    <DisplayTemplate>
                        @context.BirthDate.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="EmployeeDto"
                                Field="MobilePhoneNumber"
                                Caption="@L["MobilePhoneNumber"]">
                </DataGridColumn>

                <DataGridColumn TItem="EmployeeDto"
                                Field="Salary"
                                Caption="@L["Salary"]">
                </DataGridColumn>

                <DataGridColumn TItem="EmployeeDto"
                                Field="Gender"
                                Caption="@L["Gender"]">
                </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateEmployeeModal" Closing="@CreateEmployeeModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="CreateEmployeeForm">
            <ModalHeader>
                <ModalTitle>@L["NewEmployee"]</ModalTitle>
                <CloseButton Clicked="CloseCreateEmployeeModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewEmployeeValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewEmployee"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewEmployee.FirstName" MaxLength="EmployeeConsts.FirstNameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["LastName"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewEmployee.LastName" MaxLength="EmployeeConsts.LastNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BirthDate"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewEmployee.BirthDate">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["IdentityNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewEmployee.IdentityNumber" MaxLength="EmployeeConsts.IdentityNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["EmailAddress"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewEmployee.EmailAddress" MaxLength="EmployeeConsts.EmailAddressMaxLength" Role="TextRole.Email">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["MobilePhoneNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewEmployee.MobilePhoneNumber" MaxLength="EmployeeConsts.MobilePhoneNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["HomePhoneNumber"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEmployee.HomePhoneNumber">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Salary"] *</FieldLabel>
                            <NumericPicker TValue="double" @bind-Value="@NewEmployee.Salary" Min="EmployeeConsts.SalaryMin" Max="EmployeeConsts.SalaryMax" Decimals="0">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericPicker>
                        </Field>
                    </Validation>

                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateEmployeeModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateEmployeeForm" Clicked="CreateEmployeeAsync"/>
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditEmployeeModal" Closing="@EditEmployeeModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="EditEmployeeForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditEmployeeModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingEmployeeValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingEmployee"
                            ValidateOnLoad="false">


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingEmployee.FirstName" MaxLength="EmployeeConsts.FirstNameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["LastName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingEmployee.LastName" MaxLength="EmployeeConsts.LastNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BirthDate"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingEmployee.BirthDate">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["IdentityNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingEmployee.IdentityNumber" MaxLength="EmployeeConsts.IdentityNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["EmailAddress"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingEmployee.EmailAddress" MaxLength="EmployeeConsts.EmailAddressMaxLength" Role="TextRole.Email">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["MobilePhoneNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingEmployee.MobilePhoneNumber" MaxLength="EmployeeConsts.MobilePhoneNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["HomePhoneNumber"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEmployee.HomePhoneNumber">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Salary"] *</FieldLabel>
                            <NumericPicker TValue="double" @bind-Value="@EditingEmployee.Salary" Min="EmployeeConsts.SalaryMin" Max="EmployeeConsts.SalaryMax" Decimals="0">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericPicker>
                        </Field>
                    </Validation>
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditEmployeeModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditEmployeeForm" Clicked="UpdateEmployeeAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

